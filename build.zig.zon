.{
    .name = "sock",
    // This is a [Semantic Version](https://semver.org/).
    // In a future version of Zig it will be used for package deduplication.
    .version = "0.0.0",

    // This field is optional.
    // This is currently advisory only; Zig does not yet do anything
    // with this value.
    //.minimum_zig_version = "0.11.0",

    // This field is optional.
    // Each dependency must either provide a `url` and `hash`, or a `path`.
    // `zig build --fetch` can be used to fetch all dependencies of a package, recursively.
    // Once all dependencies are fetched, `zig build` no longer requires
    // internet connectivity.
    .dependencies = .{
        .vulkan = .{
            .url = "git+https://github.com/KhronosGroup/Vulkan-Headers/#vulkan-sdk-1.3.280",
            .hash = "1220187753c774088bf6cb8dfb97763c3f082d4c95299fe6cc322c809dc297be9826",
        },
        .volk = .{
            .url = "git+https://github.com/zeux/volk/#vulkan-sdk-1.3.280",
            .hash = "12207914759d3c3dd9bcda8639285002a4c4182498875124b6f9e5cf58bcf4ef77b6",
        },
    },
    .paths = .{
        // This makes *all* files, recursively, included in this package. It is generally
        // better to explicitly list the files and directories instead, to insure that
        // fetching from tarballs, file system paths, and version control all result
        // in the same contents hash.
        "",
        // For example...
        //"build.zig",
        //"build.zig.zon",
        //"src",
        //"LICENSE",
        //"README.md",
    },
}
